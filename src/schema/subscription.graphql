type ErrorRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  errorCode: String!
  description: String
  maintenanceEndTimestamp: String
}
type HeartbeatEvent implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
}
type OpenApiApplicationAuthReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  clientId: String!
  clientSecret: String!
}
type OpenApiApplicationAuthRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
}
type OpenApiAccountAuthReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  accessToken: String!
}
type OpenApiAccountAuthRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
}
type OpenApiErrorRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String
  errorCode: String!
  description: String
}
type OpenApiClientDisconnectEvent implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  reason: String
}
type OpenApiAccountsTokenInvalidatedEvent implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountIds: [String!]!
  reason: String
}
type OpenApiVersionReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
}
type OpenApiVersionRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  version: String!
}
type OpenApiNewOrderReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  symbolId: String!
  orderType: OpenApiOrderType!
  tradeSide: OpenApiTradeSide!
  volume: String!
  limitPrice: String
  stopPrice: String
  timeInForce: OpenApiTimeInForce
  expirationTimestamp: String
  stopLoss: String
  takeProfit: String
  comment: String
  baseSlippagePrice: String
  slippageInPoints: Int
  label: String
  positionId: String
  clientOrderId: String
  relativeStopLoss: String
  relativeTakeProfit: String
  guaranteedStopLoss: Boolean
  trailingStopLoss: Boolean
  stopTriggerMethod: OpenApiOrderTriggerMethod
}
type OpenApiExecutionEvent implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  executionType: OpenApiExecutionType!
  position: OpenApiPosition
  order: OpenApiOrder
  deal: OpenApiDeal
  bonusDepositWithdraw: OpenApiBonusDepositWithdraw
  depositWithdraw: OpenApiDepositWithdraw
  errorCode: String
  isServerEvent: Boolean
}
type OpenApiCancelOrderReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  orderId: String!
}
type OpenApiAmendOrderReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  orderId: String!
  volume: String
  limitPrice: String
  stopPrice: String
  expirationTimestamp: String
  stopLoss: String
  takeProfit: String
  slippageInPoints: Int
  relativeStopLoss: String
  relativeTakeProfit: String
  guaranteedStopLoss: Boolean
  trailingStopLoss: Boolean
  stopTriggerMethod: OpenApiOrderTriggerMethod
}
type OpenApiAmendPositionSLTPReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  positionId: String!
  stopLoss: String
  takeProfit: String
  guaranteedStopLoss: Boolean
  trailingStopLoss: Boolean
  stopLossTriggerMethod: OpenApiOrderTriggerMethod
}
type OpenApiClosePositionReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  positionId: String!
  volume: String!
}
type OpenApiTrailingSLChangedEvent implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  positionId: String!
  orderId: String!
  stopPrice: String!
  utcLastUpdateTimestamp: String!
}
type OpenApiAssetListReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
}
type OpenApiAssetListRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  asset: [OpenApiAsset!]!
}
type OpenApiSymbolsListReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
}
type OpenApiSymbolsListRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  symbol: [OpenApiLightSymbol!]!
}
type OpenApiSymbolByIdReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  symbolId: [String!]!
}
type OpenApiSymbolByIdRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  symbol: [OpenApiSymbol!]!
}
type OpenApiSymbolsForConversionReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  firstAssetId: String!
  lastAssetId: String!
}
type OpenApiSymbolsForConversionRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  symbol: [OpenApiLightSymbol!]!
}
type OpenApiSymbolChangedEvent implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  symbolId: [String!]!
}
type OpenApiAssetClassListReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
}
type OpenApiAssetClassListRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  assetClass: [OpenApiAssetClass!]!
}
type OpenApiTraderReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
}
type OpenApiTraderRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  trader: OpenApiTrader!
}
type OpenApiTraderUpdatedEvent implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  trader: OpenApiTrader!
}
type OpenApiReconcileReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
}
type OpenApiReconcileRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  position: [OpenApiPosition!]!
  order: [OpenApiOrder!]!
}
type OpenApiOrderErrorEvent implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  errorCode: String!
  orderId: String
  positionId: String
  description: String
}
type OpenApiDealListReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  fromTimestamp: String!
  toTimestamp: String!
  maxRows: Int
}
type OpenApiDealListRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  deal: [OpenApiDeal!]!
  hasMore: Boolean!
}
type OpenApiExpectedMarginReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  symbolId: String!
  volume: [String!]!
}
type OpenApiExpectedMarginRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  margin: [OpenApiExpectedMargin!]!
}
type OpenApiMarginChangedEvent implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  positionId: String!
  usedMargin: String!
}
type OpenApiCashFlowHistoryListReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  fromTimestamp: String!
  toTimestamp: String!
}
type OpenApiCashFlowHistoryListRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  depositWithdraw: [OpenApiDepositWithdraw!]!
}
type OpenApiGetAccountListByAccessTokenReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  accessToken: String!
}
type OpenApiGetAccountListByAccessTokenRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  accessToken: String!
  permissionScope: OpenApiClientPermissionScope
  ctidTraderAccount: [OpenApiCtidTraderAccount!]!
}
type OpenApiSubscribeSpotsReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  symbolId: [String!]!
}
type OpenApiSubscribeSpotsRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
}
type OpenApiUnsubscribeSpotsReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  symbolId: [String!]!
}
type OpenApiUnsubscribeSpotsRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
}
type OpenApiSpotEvent implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  symbolId: String!
  bid: String
  ask: String
  trendbar: [OpenApiTrendbar!]!
}
type OpenApiSubscribeLiveTrendbarReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  period: OpenApiTrendbarPeriod!
  symbolId: String!
}
type OpenApiUnsubscribeLiveTrendbarReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  period: OpenApiTrendbarPeriod!
  symbolId: String!
}
type OpenApiGetTrendbarsReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  fromTimestamp: String!
  toTimestamp: String!
  period: OpenApiTrendbarPeriod!
  symbolId: String!
}
type OpenApiGetTrendbarsRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  period: OpenApiTrendbarPeriod!
  timestamp: String!
  trendbar: [OpenApiTrendbar!]!
  symbolId: String
}
type OpenApiGetTickDataReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  symbolId: String!
  type: OpenApiQuoteType!
  fromTimestamp: String!
  toTimestamp: String!
}
type OpenApiGetTickDataRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  tickData: [OpenApiTickData!]!
  hasMore: Boolean!
}
type OpenApiGetCtidProfileByTokenReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  accessToken: String!
}
type OpenApiGetCtidProfileByTokenRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  profile: OpenApiCtidProfile!
}
type OpenApiDepthEvent implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  symbolId: String!
  newQuotes: [OpenApiDepthQuote!]!
  deletedQuotes: [String!]!
}
type OpenApiSubscribeDepthQuotesReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  symbolId: [String!]!
}
type OpenApiSubscribeDepthQuotesRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
}
type OpenApiUnsubscribeDepthQuotesReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  symbolId: [String!]!
}
type OpenApiUnsubscribeDepthQuotesRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
}
type OpenApiSymbolCategoryListReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
}
type OpenApiSymbolCategoryListRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  symbolCategory: [OpenApiSymbolCategory!]!
}
type OpenApiAccountLogoutReq implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
}
type OpenApiAccountLogoutRes implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
}
type OpenApiAccountDisconnectEvent implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
}
type OpenApiAsset implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  assetId: String!
  name: String!
  displayName: String
}
type OpenApiSymbol implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  symbolId: String!
  digits: Int!
  pipPosition: Int!
  enableShortSelling: Boolean
  guaranteedStopLoss: Boolean
  swapRollover3Days: OpenApiDayOfWeek
  swapLong: String
  swapShort: String
  maxVolume: String
  minVolume: String
  stepVolume: String
  maxExposure: String
  schedule: [OpenApiInterval!]!
  commission: String!
  commissionType: OpenApiCommissionType
  slDistance: Int
  tpDistance: Int
  gslDistance: Int
  gslCharge: String
  distanceSetIn: OpenApiSymbolDistanceType
  minCommission: String
  minCommissionType: OpenApiMinCommissionType
  minCommissionAsset: String
  rolloverCommission: String
  skipRolloverDays: Int
  scheduleTimeZone: String
  tradingMode: OpenApiTradingMode
  rolloverCommission3Days: OpenApiDayOfWeek
}
type OpenApiLightSymbol implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  symbolId: String!
  symbolName: String
  enabled: Boolean
  baseAssetId: String
  quoteAssetId: String
  symbolCategoryId: String
  description: String
}
type OpenApiSymbolCategory implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  id: String!
  assetClassId: String!
  name: String!
}
type OpenApiInterval implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  startSecond: Int!
  endSecond: Int!
}
type OpenApiTrader implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  balance: String!
  balanceVersion: String
  managerBonus: String
  ibBonus: String
  nonWithdrawableBonus: String
  accessRights: OpenApiAccessRights
  depositAssetId: String!
  swapFree: Boolean
  leverageInCents: Int
  totalMarginCalculationType: OpenApiTotalMarginCalculationType
  maxLeverage: Int
  frenchRisk: Boolean
  traderLogin: String
  accountType: OpenApiAccountType
  brokerName: String
  registrationTimestamp: String
}
type OpenApiPosition implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  positionId: String!
  tradeData: OpenApiTradeData!
  positionStatus: OpenApiPositionStatus!
  swap: String!
  price: String
  stopLoss: String
  takeProfit: String
  utcLastUpdateTimestamp: String
  commission: String
  marginRate: String
  mirroringCommission: String
  guaranteedStopLoss: Boolean
  usedMargin: String
  stopLossTriggerMethod: OpenApiOrderTriggerMethod
}
type OpenApiTradeData implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  symbolId: String!
  volume: String!
  tradeSide: OpenApiTradeSide!
  openTimestamp: String
  label: String
  guaranteedStopLoss: Boolean
}
type OpenApiOrder implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  orderId: String!
  tradeData: OpenApiTradeData!
  orderType: OpenApiOrderType!
  orderStatus: OpenApiOrderStatus!
  expirationTimestamp: String
  executionPrice: String
  executedVolume: String
  utcLastUpdateTimestamp: String
  baseSlippagePrice: String
  slippageInPoints: String
  closingOrder: Boolean
  limitPrice: String
  stopPrice: String
  stopLoss: String
  takeProfit: String
  clientOrderId: String
  timeInForce: OpenApiTimeInForce
  positionId: String
  relativeStopLoss: String
  relativeTakeProfit: String
  isStopOut: Boolean
  trailingStopLoss: Boolean
  stopTriggerMethod: OpenApiOrderTriggerMethod
}
type OpenApiBonusDepositWithdraw implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  operationType: OpenApiChangeBonusType!
  bonusHistoryId: String!
  managerBonus: String!
  managerDelta: String!
  ibBonus: String!
  ibDelta: String!
  changeBonusTimestamp: String!
  externalNote: String
  introducingBrokerId: String
}
type OpenApiDepositWithdraw implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  operationType: OpenApiChangeBalanceType!
  balanceHistoryId: String!
  balance: String!
  delta: String!
  changeBalanceTimestamp: String!
  externalNote: String
  balanceVersion: String
  equity: String
}
type OpenApiDeal implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  dealId: String!
  orderId: String!
  positionId: String!
  volume: String!
  filledVolume: String!
  symbolId: String!
  createTimestamp: String!
  executionTimestamp: String!
  utcLastUpdateTimestamp: String
  executionPrice: String
  tradeSide: OpenApiTradeSide!
  dealStatus: OpenApiDealStatus!
  marginRate: String
  commission: String
  baseToUsdConversionRate: String
  closePositionDetail: OpenApiClosePositionDetail
}
type OpenApiClosePositionDetail implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  entryPrice: String!
  grossProfit: String!
  swap: String!
  commission: String!
  balance: String!
  quoteToDepositConversionRate: String
  closedVolume: String
  balanceVersion: String
}
type OpenApiTrendbar implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  volume: String!
  period: OpenApiTrendbarPeriod
  low: String
  deltaOpen: String
  deltaClose: String
  deltaHigh: String
  utcTimestampInMinutes: Int
}
type OpenApiExpectedMargin implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  volume: String!
  buyMargin: String!
  sellMargin: String!
}
type OpenApiTickData implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  timestamp: String!
  tick: String!
}
type OpenApiCtidProfile implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  userId: String!
}
type OpenApiCtidTraderAccount implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  ctidTraderAccountId: String!
  isLive: Boolean
  traderLogin: String
}
type OpenApiAssetClass implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  id: String
  name: String
}
type OpenApiDepthQuote implements SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
  id: String!
  size: String!
  bid: String
  ask: String
}
enum PayloadType {
  PROTO_MESSAGE
  ERROR_RES
  HEARTBEAT_EVENT
}
enum ErrorCode {
  UNKNOWN_ERROR
  UNSUPPORTED_MESSAGE
  INVALID_REQUEST
  WRONG_PASSWORD
  TIMEOUT_ERROR
  ENTITY_NOT_FOUND
  CANT_ROUTE_REQUEST
  FRAME_TOO_LONG
  MARKET_CLOSED
  CONCURRENT_MODIFICATION
  BLOCKED_PAYLOAD_TYPE
}
enum OpenApiPayloadType {
  PROTO_OA_APPLICATION_AUTH_REQ
  PROTO_OA_APPLICATION_AUTH_RES
  PROTO_OA_ACCOUNT_AUTH_REQ
  PROTO_OA_ACCOUNT_AUTH_RES
  PROTO_OA_VERSION_REQ
  PROTO_OA_VERSION_RES
  PROTO_OA_NEW_ORDER_REQ
  PROTO_OA_TRAILING_SL_CHANGED_EVENT
  PROTO_OA_CANCEL_ORDER_REQ
  PROTO_OA_AMEND_ORDER_REQ
  PROTO_OA_AMEND_POSITION_SLTP_REQ
  PROTO_OA_CLOSE_POSITION_REQ
  PROTO_OA_ASSET_LIST_REQ
  PROTO_OA_ASSET_LIST_RES
  PROTO_OA_SYMBOLS_LIST_REQ
  PROTO_OA_SYMBOLS_LIST_RES
  PROTO_OA_SYMBOL_BY_ID_REQ
  PROTO_OA_SYMBOL_BY_ID_RES
  PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ
  PROTO_OA_SYMBOLS_FOR_CONVERSION_RES
  PROTO_OA_SYMBOL_CHANGED_EVENT
  PROTO_OA_TRADER_REQ
  PROTO_OA_TRADER_RES
  PROTO_OA_TRADER_UPDATE_EVENT
  PROTO_OA_RECONCILE_REQ
  PROTO_OA_RECONCILE_RES
  PROTO_OA_EXECUTION_EVENT
  PROTO_OA_SUBSCRIBE_SPOTS_REQ
  PROTO_OA_SUBSCRIBE_SPOTS_RES
  PROTO_OA_UNSUBSCRIBE_SPOTS_REQ
  PROTO_OA_UNSUBSCRIBE_SPOTS_RES
  PROTO_OA_SPOT_EVENT
  PROTO_OA_ORDER_ERROR_EVENT
  PROTO_OA_DEAL_LIST_REQ
  PROTO_OA_DEAL_LIST_RES
  PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ
  PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ
  PROTO_OA_GET_TRENDBARS_REQ
  PROTO_OA_GET_TRENDBARS_RES
  PROTO_OA_EXPECTED_MARGIN_REQ
  PROTO_OA_EXPECTED_MARGIN_RES
  PROTO_OA_MARGIN_CHANGED_EVENT
  PROTO_OA_ERROR_RES
  PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ
  PROTO_OA_CASH_FLOW_HISTORY_LIST_RES
  PROTO_OA_GET_TICKDATA_REQ
  PROTO_OA_GET_TICKDATA_RES
  PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT
  PROTO_OA_CLIENT_DISCONNECT_EVENT
  PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ
  PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES
  PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ
  PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES
  PROTO_OA_ASSET_CLASS_LIST_REQ
  PROTO_OA_ASSET_CLASS_LIST_RES
  PROTO_OA_DEPTH_EVENT
  PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ
  PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES
  PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ
  PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES
  PROTO_OA_SYMBOL_CATEGORY_REQ
  PROTO_OA_SYMBOL_CATEGORY_RES
  PROTO_OA_ACCOUNT_LOGOUT_REQ
  PROTO_OA_ACCOUNT_LOGOUT_RES
  PROTO_OA_ACCOUNT_DISCONNECT_EVENT
}
enum OpenApiDayOfWeek {
  NONE
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}
enum OpenApiCommissionType {
  USD_PER_MIL_USD
  USD_PER_LOT
  PERCENTAGE
  QUOTE_CCY_PER_LOT
}
enum OpenApiSymbolDistanceType {
  SYMBOL_DISTANCE_IN_POINTS
  SYMBOL_DISTANCE_IN_PERCENTAGE
}
enum OpenApiMinCommissionType {
  CURRENCY
  QUOTE_CURRENCY
}
enum OpenApiTradingMode {
  ENABLED
  DISABLED_WITHOUT_PENDINGS_EXECUTION
  DISABLED_WITH_PENDINGS_EXECUTION
  CLOSE_ONLY_MODE
}
enum OpenApiAccessRights {
  FULL_ACCESS
  CLOSE_ONLY
  NO_TRADING
  NO_LOGIN
}
enum OpenApiTotalMarginCalculationType {
  MAX
  SUM
  NET
}
enum OpenApiAccountType {
  HEDGED
  NETTED
  SPREAD_BETTING
}
enum OpenApiPositionStatus {
  POSITION_STATUS_OPEN
  POSITION_STATUS_CLOSED
  POSITION_STATUS_CREATED
  POSITION_STATUS_ERROR
}
enum OpenApiTradeSide {
  BUY
  SELL
}
enum OpenApiOrderType {
  MARKET
  LIMIT
  STOP
  STOP_LOSS_TAKE_PROFIT
  MARKET_RANGE
  STOP_LIMIT
}
enum OpenApiTimeInForce {
  GOOD_TILL_DATE
  GOOD_TILL_CANCEL
  IMMEDIATE_OR_CANCEL
  FILL_OR_KILL
  MARKET_ON_OPEN
}
enum OpenApiOrderStatus {
  ORDER_STATUS_ACCEPTED
  ORDER_STATUS_FILLED
  ORDER_STATUS_REJECTED
  ORDER_STATUS_EXPIRED
  ORDER_STATUS_CANCELLED
}
enum OpenApiOrderTriggerMethod {
  TRADE
  OPPOSITE
  DOUBLE_TRADE
  DOUBLE_OPPOSITE
}
enum OpenApiExecutionType {
  ORDER_ACCEPTED
  ORDER_FILLED
  ORDER_REPLACED
  ORDER_CANCELLED
  ORDER_EXPIRED
  ORDER_REJECTED
  ORDER_CANCEL_REJECTED
  SWAP
  DEPOSIT_WITHDRAW
  ORDER_PARTIAL_FILL
  BONUS_DEPOSIT_WITHDRAW
}
enum OpenApiChangeBonusType {
  BONUS_DEPOSIT
  BONUS_WITHDRAW
}
enum OpenApiChangeBalanceType {
  BALANCE_DEPOSIT
  BALANCE_WITHDRAW
  BALANCE_DEPOSIT_STRATEGY_COMMISSION_INNER
  BALANCE_WITHDRAW_STRATEGY_COMMISSION_INNER
  BALANCE_DEPOSIT_IB_COMMISSIONS
  BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE
  BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_SUB_IB
  BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_BROKER
  BALANCE_DEPOSIT_REBATE
  BALANCE_WITHDRAW_REBATE
  BALANCE_DEPOSIT_STRATEGY_COMMISSION_OUTER
  BALANCE_WITHDRAW_STRATEGY_COMMISSION_OUTER
  BALANCE_WITHDRAW_BONUS_COMPENSATION
  BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE_TO_BROKER
  BALANCE_DEPOSIT_DIVIDENDS
  BALANCE_WITHDRAW_DIVIDENDS
  BALANCE_WITHDRAW_GSL_CHARGE
  BALANCE_WITHDRAW_ROLLOVER
  BALANCE_DEPOSIT_NONWITHDRAWABLE_BONUS
  BALANCE_WITHDRAW_NONWITHDRAWABLE_BONUS
  BALANCE_DEPOSIT_SWAP
  BALANCE_WITHDRAW_SWAP
  BALANCE_DEPOSIT_MANAGEMENT_FEE
  BALANCE_WITHDRAW_MANAGEMENT_FEE
  BALANCE_DEPOSIT_PERFORMANCE_FEE
  BALANCE_WITHDRAW_INACTIVITY_FEE
}
enum OpenApiDealStatus {
  FILLED
  PARTIALLY_FILLED
  REJECTED
  INTERNALLY_REJECTED
  ERROR
  MISSED
}
enum OpenApiTrendbarPeriod {
  M1
  M2
  M3
  M4
  M5
  M10
  M15
  M30
  H1
  H4
  H12
  D1
  W1
  MN1
}
enum OpenApiQuoteType {
  BID
  ASK
}
enum OpenApiClientPermissionScope {
  SCOPE_VIEW
  SCOPE_TRADE
}
enum OpenApiErrorCode {
  OA_AUTH_TOKEN_EXPIRED
  ACCOUNT_NOT_AUTHORIZED
  INCORRECT_BOUNDARIES
  CONNECTIONS_LIMIT_EXCEEDED
}
type Subscription {
  events: Events!
}

interface Event {
  SESSION: String!
  TYPE: String!
}
interface SpotwareEvent {
  SESSION: String!
  TYPE: String!
  payloadType: Int
  clientMsgId: String
}
union Events =
    ConnectEvent
  | ConnectedEvent
  | DisconnectEvent
  | DisconnectedEvent
  | ErrorRes
  | HeartbeatEvent
  | OpenApiApplicationAuthReq
  | OpenApiApplicationAuthRes
  | OpenApiAccountAuthReq
  | OpenApiAccountAuthRes
  | OpenApiErrorRes
  | OpenApiClientDisconnectEvent
  | OpenApiAccountsTokenInvalidatedEvent
  | OpenApiVersionReq
  | OpenApiVersionRes
  | OpenApiNewOrderReq
  | OpenApiExecutionEvent
  | OpenApiCancelOrderReq
  | OpenApiAmendOrderReq
  | OpenApiAmendPositionSLTPReq
  | OpenApiClosePositionReq
  | OpenApiTrailingSLChangedEvent
  | OpenApiAssetListReq
  | OpenApiAssetListRes
  | OpenApiSymbolsListReq
  | OpenApiSymbolsListRes
  | OpenApiSymbolByIdReq
  | OpenApiSymbolByIdRes
  | OpenApiSymbolsForConversionReq
  | OpenApiSymbolsForConversionRes
  | OpenApiSymbolChangedEvent
  | OpenApiAssetClassListReq
  | OpenApiAssetClassListRes
  | OpenApiTraderReq
  | OpenApiTraderRes
  | OpenApiTraderUpdatedEvent
  | OpenApiReconcileReq
  | OpenApiReconcileRes
  | OpenApiOrderErrorEvent
  | OpenApiDealListReq
  | OpenApiDealListRes
  | OpenApiExpectedMarginReq
  | OpenApiExpectedMarginRes
  | OpenApiMarginChangedEvent
  | OpenApiCashFlowHistoryListReq
  | OpenApiCashFlowHistoryListRes
  | OpenApiGetAccountListByAccessTokenReq
  | OpenApiGetAccountListByAccessTokenRes
  | OpenApiSubscribeSpotsReq
  | OpenApiSubscribeSpotsRes
  | OpenApiUnsubscribeSpotsReq
  | OpenApiUnsubscribeSpotsRes
  | OpenApiSpotEvent
  | OpenApiSubscribeLiveTrendbarReq
  | OpenApiUnsubscribeLiveTrendbarReq
  | OpenApiGetTrendbarsReq
  | OpenApiGetTrendbarsRes
  | OpenApiGetTickDataReq
  | OpenApiGetTickDataRes
  | OpenApiGetCtidProfileByTokenReq
  | OpenApiGetCtidProfileByTokenRes
  | OpenApiDepthEvent
  | OpenApiSubscribeDepthQuotesReq
  | OpenApiSubscribeDepthQuotesRes
  | OpenApiUnsubscribeDepthQuotesReq
  | OpenApiUnsubscribeDepthQuotesRes
  | OpenApiSymbolCategoryListReq
  | OpenApiSymbolCategoryListRes
  | OpenApiAccountLogoutReq
  | OpenApiAccountLogoutRes
  | OpenApiAccountDisconnectEvent
type ConnectEvent implements Event {
  SESSION: String!
  TYPE: String!
  host: String!
  port: Int!
}
type ConnectedEvent implements Event {
  SESSION: String!
  TYPE: String!
  host: String!
  port: Int!
}
type DisconnectEvent implements Event {
  SESSION: String!
  TYPE: String!
}
type DisconnectedEvent implements Event {
  SESSION: String!
  TYPE: String!
}
